void vTaskRefreshSensorData(void *pvParameters)
{
  // Initialize delay wake time 
  portTickType wakeTime;
  portTickType frequency = 100;
  wakeTime = xTaskGetTickCount();

  // Execute & delay
  while(1){
  	RefreshSensorData();
  	xSemaphoreGive(dataSemaphore);
  	vTaskDelayUntil(&waketime, frequency); 
  }
}

void vTaskCalculateOrientation(void *pvParameters)
{
  // Initialize delay wake time 
  portTickType wakeTime;
  portTickType frequency = 100;
  wakeTime = xTaskGetTickCount();
  
  // Execute & delay
  while(1){
    // Block until available
    if(xSemaphoreTake(dataSemaphore, portMAX_DELAY) == pdTRUE),
      calculateOrientation();
      vTaskDelayUntil(&wakeTime, frequency);
  }
}

// Recoded semaphore creation
void FreeRTOS_Configuration(void)
{
 
  // Create semaphore
  xSemaphoreHandle dataSemaphore = NULL;
  vSemaphoreCreateBinary(dataSemaphore);
    
  // Task Creations
  xTaskCreate(vTaskDetectEmergency, NULL, 100, NULL, (tskIDLE_PRIORITY + 5), NULL);
  xTaskCreate(vTaskRefreshSensorData, NULL, 100, NULL, (tskIDLE_PRIORITY + 4), NULL);
  xTaskCreate(vTaskCalculateOrientation, NULL, 100, NULL, (tskIDLE_PRIORITY + 3), NULL);
  //xTaskCreate(vTaskUpdatePid, NULL, 100, NULL, (tskIDLE_PRIORITY + 2), NULL);
  xTaskCreate(vTaskLogDebugInfo, NULL, 100, NULL, (tskIDLE_PRIORITY + 1), NULL);
  xTaskCreate(vTaskRLED, NULL, 100, NULL, tskIDLE_PRIORITY, NULL);
  xTaskCreate(vTaskGLED, NULL, 100, NULL, tskIDLE_PRIORITY, NULL);
  
}
